apply plugin: 'application'

sourceSets.main.resources.srcDirs += [ rootProject.file('${assetsFolderName}').path ]
mainClassName = '${corePackage}.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'
sourceCompatibility = ${desktopJavaVersion}

dependencies {
	implementation project(':core')

	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
${dependencies}}

import org.gradle.internal.os.OperatingSystem

run {
	workingDir = rootProject.file('${assetsFolderName}').path
	setIgnoreExitValue(true)

	if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
		// Required to run LWJGL3 Java apps on MacOS
		jvmArgs += "-XstartOnFirstThread"
	}
}
jar {
	archiveBaseName = appName
	//// These can be excluded because they add to the jar size but libGDX 1.9.11 can't use them.
	//// If your libGDX version is 1.9.10 or earlier, or is 1.9.12-SNAPSHOT or later, you can leave
	//// the following line commented; if you use 1.9.11 exactly, or if you use 1.9.12-SNAPSHOT but
	//// don't need ARM Linux support, you can uncomment it safely.
	//// It's always safe to keep that line commented out; it only affects JAR size.
	//exclude('linux/arm32/**', 'linux/arm64/**')
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	doLast {
		file(archivePath).setExecutable(true, false)
	}
}